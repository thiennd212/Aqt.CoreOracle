@page
@using Aqt.CoreOracle.[ModuleName]
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Aqt.CoreOracle.Web.Pages.[ModuleName].[EntityName]s
@model IndexModel
@inject IAuthorizationService AuthorizationService
@inject IPageLayout PageLayout
@{
    PageLayout.Content.Title = L["[EntityName]s"].Value;
    PageLayout.Content.BreadCrumb.Add(L["Menu:[ModuleName]"].Value);
    PageLayout.Content.MenuItemName = "[ModuleName].[EntityName]s";
}

@section scripts {
    <abp-script src="/Pages/[ModuleName]/[EntityName]s/index.js" />
}

@section styles {
    <abp-style src="/Pages/[ModuleName]/[EntityName]s/index.css"/>
}

<abp-card>
    <abp-card-header>
        <abp-row>
            <abp-column size-md="_6">
                <abp-card-title>@L["[EntityName]s"]</abp-card-title>
            </abp-column>
            <abp-column size-md="_6" class="text-end">
                @if (await AuthorizationService.IsGrantedAsync([ModuleName]Permissions.[EntityName]s.Create))
                {
                    <abp-button id="New[EntityName]Button"
                               text="@L["New[EntityName]"].Value"
                               icon="plus"
                               button-type="Primary" />
                }
            </abp-column>
        </abp-row>
    </abp-card-header>
    <abp-card-body>
        <abp-table striped-rows="true" id="[EntityName]sTable" class="nowrap">
            <thead>
                <tr>
                    <th>@L["Actions"]</th>
                    <th>@L["[EntityName]Code"]</th>
                    <th>@L["[EntityName]Name"]</th>
                    <th>@L["DisplayOrder"]</th>
                    <th>@L["IsActive"]</th>
                </tr>
            </thead>
        </abp-table>
    </abp-card-body>
</abp-card> 