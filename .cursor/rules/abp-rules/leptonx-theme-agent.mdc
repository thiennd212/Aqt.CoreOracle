---
description: 
globs: 
alwaysApply: true
---
---
description: "This rule governs the implementation and customization of LeptonX Lite Theme in ABP Applications. Apply when:
(1) Customizing the LeptonX theme
(2) Creating new UI components
(3) Implementing responsive design
(4) Working with navigation menus
(5) Using or extending LeptonX UI components
(6) Creating layout templates"
globs: ""
alwaysApply: true
---

# LeptonX Lite Theme Implementation Guidelines

## Critical Rules
- Sử dụng LeptonX Lite built-in components khi có thể
- Tùy chỉnh theme colors thông qua LeptonX theme options
- Implement responsive design với LeptonX grid system
- Tuân thủ LeptonX design system cho consistency
- Sử dụng LeptonX navigation menu system
- Override LeptonX styles đúng cách thông qua bundling
- Tất cả UI components phải responsive trên mobile
- Sử dụng LeptonX variables cho colors và spacing
- Implement proper dark mode support
- Tối ưu hóa performance bằng cách tránh bloated CSS
- Sử dụng LeptonX's SVG icons thay vì font icons

## Examples

<example>
```csharp
// Theme configuration in module
public override void ConfigureServices(ServiceConfigurationContext context)
{
    Configure<LeptonXThemeOptions>(options =>
    {
        options.DefaultStyle = LeptonXStyleNames.System;
    });
    
    Configure<AbpBundlingOptions>(options =>
    {
        options.StyleBundles.Configure(
            LeptonXThemeBundles.Styles.Global,
            bundle => { bundle.AddFiles("/custom-styles.css"); }
        );
    });
}

// Menu contribution
public class BookStoreMenuContributor : IMenuContributor
{
    public async Task ConfigureMenuAsync(MenuConfigurationContext context)
    {
        if (context.Menu.Name == StandardMenus.Main)
        {
            await ConfigureMainMenuAsync(context);
        }
    }

    private async Task ConfigureMainMenuAsync(MenuConfigurationContext context)
    {
        var l = context.GetLocalizer<BookStoreResource>();
        
        context.Menu.AddItem(
            new ApplicationMenuItem(
                "BookStore.Books",
                l["Menu:Books"],
                url: "/Books",
                icon: "fa fa-book"
            )
        );
    }
}
```

```html
<!-- Correct usage of LeptonX components -->
<abp-card>
    <abp-card-header>@L["BookDetails"]</abp-card-header>
    <abp-card-body>
        <abp-row>
            <abp-column size-md="_6">
                <abp-input asp-for="Book.Name" />
            </abp-column>
            <abp-column size-md="_6">
                <abp-input asp-for="Book.Price" />
            </abp-column>
        </abp-row>
    </abp-card-body>
    <abp-card-footer>
        <abp-button button-type="Primary" type="submit">@L["Save"]</abp-button>
    </abp-card-footer>
</abp-card>
```

```css
/* Correct usage of LeptonX variables */
.custom-element {
    color: var(--lpx-primary);
    background-color: var(--lpx-card-bg);
    padding: var(--lpx-spacing);
    border-radius: var(--lpx-border-radius);
}

/* Dark mode support */
.abp-theme-dark .custom-element {
    background-color: var(--lpx-dark-card-bg);
}
```
</example>

<example type="invalid">
```csharp
// Invalid theme customization
public override void ConfigureServices(ServiceConfigurationContext context)
{
    // Không sử dụng LeptonXThemeOptions
    Configure<AbpLayoutOptions>(options =>
    {
        options.LayoutType = "Custom"; // Wrong approach
    });
}

// Invalid menu configuration
public class BadMenuContributor
{
    public Task ConfigureMenu(IMenuManager menu)
    {
        // Không sử dụng MenuContributor pattern
        menu.Main.AddItem(new MenuItem("Books", "/books"));
        return Task.CompletedTask;
    }
}
```

```html
<!-- Invalid usage - not using LeptonX components -->
<div class="card">
    <div class="header">Book Details</div>
    <div class="body">
        <div class="row">
            <div class="col-md-6">
                <input type="text" name="Name" />
            </div>
        </div>
    </div>
    <div class="footer">
        <button type="submit">Save</button>
    </div>
</div>
```

```css
/* Invalid - hard-coded values instead of LeptonX variables */
.custom-element {
    color: #007bff; /* Should use var(--lpx-primary) */
    background-color: white; /* Should use var(--lpx-card-bg) */
    padding: 15px; /* Should use var(--lpx-spacing) */
    border-radius: 5px; /* Should use var(--lpx-border-radius) */
}

/* No dark mode support */
```
</example> 